<!doctype html>

<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta name='viewport' content='width=device-width' />
	<title>Paint data calls - format timings</title>

	<link rel="stylesheet" href="../css/normalize.css" type="text/css">
	<link rel="stylesheet" href="../css/base.less" type="text/x-less">

	<style type='text/css'>
		#results {
			padding: 60px;
			font-size: 14pt;
		}
	</style>

	<script src="../js/mootools-core-full-compat-yc.js"></script>
	<script type='text/javascript'>
		window.addEvent('load', function() {
			Ui.initialize.bind(Ui)();
		});

		var Ui = {
			initialize: function() {
				this.results = {};
				this.getData();
				this.getDataSmall.delay(2000, this);
			},

			startTimer: function(id) {
				this.results[id] = new Date();
				return this;
			},

			stopTimer: function(id) {
				if(this.results[id]) {
					return (new Date()) - this.results[id];
				}
			},

			//duration: function(fn) {
			//	var start = new Date();
			//	fn();
			//	return (new Date()) - start;
			//},

			addResult: function(desc, time) {
				new Element('div', {'text': desc + ' - ' + time + 'ms'}).inject('results');
			},

			getData: function() {
				this.data = {};
				var timerID = 'data_normal';
				this.startTimer(timerID)
				new Request.JSON({
					'url': '/paint/api/cell',
					onSuccess: function(response, text) {
						if(response.data) {

							response.data.each(function(cell) {
								var id = cell.x + '-' + cell.y;
								this.data[id] = cell.color;
							}.bind(this));

							var len = text.length / 1024;
							this.addResult('get cell data (normal) ['+ len.round() +'kb]', this.stopTimer(timerID));
						}
					}.bind(this)
				}).get({ sx:-500, sy:-500, ex:-400, ey: -400});
			},

			getDataSmall: function() {
				this.data = {};
				var timerID = 'data_small';
				this.startTimer(timerID)
				new Request.JSON({
					'url': '/paint/api/cell',
					onSuccess: function(response, text) {
						if(response.data) {
							this.data = Object.merge(this.data, response.data);

							var len = text.length / 1024;
							this.addResult('get cell data (data_small) ['+ len.round() +'kb]', this.stopTimer(timerID));
						}
					}.bind(this)
				}).get({ sx:-500, sy:-500, ex:-400, ey: -400, format:'small'});
			}

		}

	</script>

	<script src="../js/less.min.js"></script>
</head>

<body>

<div id='wrapper'>

	<div id='results'>
	</div>

	<div id='push'></div>
</div>

<div id='footer'>
	<div class='content'>
		<div class='logo'>
			<img src='../logo.png' alt='logo'>
		</div>

		<div class='me'>
			<div>Nathan Reed | <a href='http://twitter.com/reednj'>@reednj</a></div>
			<div><%= settings.version %></div>
		</div>

	</div>
</div>

<%= erb :google %>

</body>

</html>
